apply plugin: 'com.android.application'

def PROJECT_NAME = "SunriseSunsetApp"

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

def VERSION_CODE = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
def VERSION_NAME = "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "app.sunset.sunrise.sunrisesunsetapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.sunrise-sunset.org\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            project.archivesBaseName = PROJECT_NAME + "-" + VERSION_NAME;
            buildConfigField("String", "BASE_URL", "\"https://api.sunrise-sunset.org\"")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.3'

    // android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"

    //play services for location api
    implementation "com.google.android.gms:play-services:$rootProject.playServices"

    // RxJava2 retrofit2 adapter
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2"

    // gson converter
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2"

    // Logging interceptor
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptor"

    // parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Lang builder
    implementation "org.apache.commons:commons-lang3:$rootProject.langBuilder"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // code generator for view
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // testing
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
